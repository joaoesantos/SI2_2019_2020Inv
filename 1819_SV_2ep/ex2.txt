###ex2
a.
read committed
T1          T2
6
            6
1
            5
            2
4           
            7
7

Alternativa, RODRI (a de cima nao pode ser porque nao usa apenas 1, 3, 6, 7):
READ COMMITED T1 e T2
T1   |   T2
6    |   
     |   6
1    |   
     |   3
3    |   
     |   1
7    |   
     |   7


b.
read uncommitted
T1          T2
6           6
            2
1
7
            4
            7

c.
RODRI:
Não é mpossível dado que não ocorre inserção nem remoção de nenhum registo

d.
RODRI:
T1   |   T2
6    |   
4    |   
     |   6
     |   1
5    |   
     |   2
7    |   
     |   7

Como é serializable a operação 4 faz com que haja um range lock na posse da trancação t1.
Isto faz com que não seja possível nenhuma outra transação fazer updates na tabela até que este lock seja
libertado, i.e. t1 faze commit ou rollback.
Pelo que t2(1) ficaria bloqueada até t1(5) e t1(7) terminarem e depois retomaria a sua execução.

e.
RODRI: (resolvido nas aulas)
Qualquer nivel de isolamento verifica as condiçoes
T1   |   T2
6    |   
1    |   
     |   6
     |   2
3    |   
     |   4
7    |   
     |   7