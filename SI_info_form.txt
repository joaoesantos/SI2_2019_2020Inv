form SI

Primitivas - operações matemáticas, usadas como blocos
construtores na realização de esquemas.ex : DES, RSA

Esquemas - combinação de primitivas e métodos adicionais para a
realização de tarefas criptográficas como a cifra e a assinatura digital.
ex : DES CBC PKCS5Padding; RSA OAEP MGF1 SHA1

Protocolos - sequências de operações, a realizar por duas ou mais
entidades, envolvendo esquemas e primitivas. ex: TLS com TLS_RSA_WITH_DES_CBC_SHA

Cifra simetrica
	Propriedades de segurança: É computacionalmente infazível obter mensagem a partir da cifra, sem o
	conhecimento da chave
	Cifra -> geraçao de chaves probabilistica, cifra probabilistica, decifra deterministica
	não garante integridade (precisas de AD ou MAC)
MAC
	MAC -> geraçao de chaves probabilistica, marcas probabilistica, verificaçaõ de marca deterministica
	Sem o conhecimento da chave, é computacionalmente infazível:
		falsificação selectiva dado mensagem, encontrar a marca tal que V(k )(t, m) = true
		falsificação existencial encontrar o par (mensagem, marca) tal que V(k t,m ) = true

Assimetrico -> garnate nao repudio, mas é menos performant

(principios da primitiva RSA? - slide 13 da aula 1)

Hash: input é sequencia de tamanho arbitrario, output é de dimensao fixa. ex: MD5 (n=128) e SHA 1 (n=160)
	Baseiam se em operações booleanas e aritméticas sobre palavras de pequena dimensão (16, 32, 64 bit
	algoritmo rápido em comparaçao a cifra/decifras
	Propriedades de segurança:
		É computacionalmente fácil obter H(x dado x
		É computacionalmente difícil , dado x , obter x’x’≠x tal que H(x’) = H(x)
			Segunda pré imagem
		É computacionalmente difícil obter (x, x’), com x’x’≠x tal que H(x) = H(x’)
			colisão
			
Algoritmos de Cifra/Assinatura:
	primitiva.ex: RSA
	formatação/padding. ex: . PKCS#1 v1.5, PSS
	função de hash: MD5, SHA1, SHA2

(pesquisar o que sao cifras stream e por info soibre ekas aqui, tipo pros/cons)

Cifra emb bloco
	cifra e partida em blocos de n bits (ex: 64, 128 bits)
	dimensao da chave, ex: 56, 128, 256 bits
	elementos construtores: substituiçoes, transposiçoes
	
	A dimensão n do bloco deve ser suficientemente
	elevada para impossibilitar ataques baseados na
	estatística do texto em claro
	
	A dimensão da chave l deve ser suficientemente
	elevada para impossibilitar ataques de pesquisa
	exaustiva
	
	Considerações:
		Padrões no texto em claro não deverão ser evidentes no texto cifrado
		A eficiência do método usado não deverá ser muito inferior à eficiência da primitiva de cifra em bloco usada
		A dimensão do texto cifrado deve ser aproximadamente igual à dimensão do texto em claro
		Em algumas aplicações é importante que a decifra seja capaz de recuperar de erros , adições e remoções de bits ocorridos no texto cifrado
		Acesso aleatório capacidade de decifrar e alterar apenas parte do criptograma
		
	ECB (electronic codebook)
		Blocos de texto em claro iguais: Blocos de texto em claro iguais , cifrados com a mesma chave , implicam blocos de texto cifrado iguais
		Interdependência na cifra: A cifra é realizada de forma independente de bloco para bloco
		Propagação de erros: A ocorrência de erros num bloco de texto cifrado afecta apenas a decifra desse bloco
		Acesso aleatório: Permite acesso aleatório para decifra e recifra ” de múltiplos de blocos.
	CBC (cipher block chaining)
		Blocos de texto em claro iguais: Sob a mesma chave e sob o mesmo vector de iniciação, duas mensagens iguais implicam criptogramas iguais
		Interdependência na cifra: A cifra de um bloco de texto em claro afecta a cifra dos blocos seguintes
		Propagação e recuperação de erros: A ocorrência de erros num bloco c j de texto cifrado afecta a decifra do
			próprio bloco e a do bloco seguinte c j +1 . A decifra do bloco c j +1 terá erros nas mesmas posições que c j
		Observações: A reordenação dos blocos de texto cifrado afecta a decifra. É relativamente fácil manipular um determinado bloco de texto em claro
		Extra: Muito usado na prática: SSL, IPSEC, ... Seguro no modelo CPA ( Chosen Plaintext Atack)
	CFB	(Cipher feedback)
		Blocos de texto em claro iguais: Sob a mesma chave e sob o mesmo vector de iniciação, duas mensagens iguais implicam criptogramas iguais
		Interdependência na cifra: A cifra de um bloco de texto em claro afecta a cifra dos blocos seguintes
		Propagação e recuperação de erros: A ocorrência de erros num bloco c j de texto cifrado afecta a decifra do
			próprio bloco e a dos n/r blocos seguintes. O bloco m j resultante da decifra do bloco c j terá erros nas mesmas posições que c j
		Observações: A reordenação dos blocos de texto cifrado afecta a decifra. É relativamente fácil manipular um determinado bloco de texto em claro
	OFB (Output feedback)
		Blocos de texto em claro iguais: Sob a mesma chave e sob o mesmo vector de iniciação, duas mensagens iguais implicam criptogramas iguais
		Propagação e recuperação de erros: A ocorrência de erros num bloco de texto cifrado c j afecta apenas a
			decifra desse bloco. O bloco m j resultante da decifra do bloco c j terá erros nas mesmas posições que c j
		Observações: É relativamente fácil manipular um determinado bloco de texto em claro
	CTR (counter)
		Blocos de texto em claro iguais: Sob a mesma chave e sob o mesmo vector de iniciação, duas mensagens iguais implicam criptogramas iguais
		Propagação e recuperação de erros: A ocorrência de erros num bloco de texto cifrado c j afecta apenas a
			decifra desse bloco. O bloco m j resultante da decifra do bloco c j terá erros nas mesmas posições que c j
		Acesso aleatório: Permite acesso aleatório para decifra e “ recifra ” de bits
		Observações: É relativamente fácil manipular um determinado bloco de texto em claro
		Extra: Pouco usado na prática: não faz parte dos modos de operação. normalizados para utilização com o DES (FIPS PUB 81)
			Seguro no modelo CPA. Operação em paralelo. Acesso aleatório. Não amplifica erros. Não necessita de padding. Modo de operação em stream.
		
Padding:
	Seja X o número de bytes a acrescentar para que a dimensão da mensagem seja múltipla da dimensão do bloco
	PKCS# 5 (CBC PAD): Acrescentar X bytes com o valor X. Utilizações PKCS# 7, CMS, SSL
	ESP PAD: Acrescentar X bytes com os valores ’01’ ’02’ ... X. Utilizações: IPSEC
	SSH PAD: Acrescentar X 1 bytes aleatórios seguido do byte com valor X

Cifra e MAC:
	Encrypt then MAC
	MAC then encrypt
	
JCA
	(lamber codigo da serie um a anotar cenas de JCA que vires)
	CSP Cryptographic Service Provider: package ou conjunto de packages que implementam um ou mais mecanismos criptográficos (serviços criptográficos)
	Engine Classes: Definição abstracta (sem implementação) dum mecanismo criptográfico. A criação dos objectos é realizada através de métodos estáticos getInstance
	Specification Classes: Representações normalizadas e transparentes de objectos criptográficos, tais como chaves e parâmetros de algoritmos.
		
	Cipher
		algorithm : AES (symetric), DES (symetric), DESede (symetric), RSA (asymetric), DSA (asymetric)
		mode : ECB, CBC, CFB, CTR, OFB,
		padding : PKCS5Padding, PKCS1Padding, OAEPPadding
		
	Formatos de ficheiro:
		JKS - Formato proprietário da Sun
		JCEKS - Evolução do formato JCE com melhor protecção
		PKCS12 - Norma PKCS#12 (usada nos ficheiros . pfx criados pelo Windows)
		
Certificados X.509
	Quem certifica (emissor): Autoridade de Certificação (AC)
	O que certifica: associação entre uma chave pública e um nome
	Outros atributos validade, usos da chaves, extensões
	Assinatura do emissor assinatura digital realizada com a chave de assinatura (privada) do emissor
	nos certificados podem existir modos de aceder a listas de revogação que indicam list de certificados nao validos
		
(esquema do certpath talvez seja util, slides do certpath)

SSL
	Divided in two major sub protocols (por os diagramas que estao nos slides, do handshake principalmente)
	Record Protocol: 
		Handles data fragmentation, compression, confidentiality and message authentication
		Requires a reliable transport protocol
		Fragment, Compress, Authenticate (MAC) then Encrypt (por o diagrama do slide 5)
	Handshake Protocol
		Handles the secure connection creation and management, namely the
			secure establishment of the record protocol cryptographic parameters
			
	Typical scenario on the internet (HTTPS)
		RSA based key transport using X.509 certificates
		Mandatory server authentication
		Optional client authentication
	
SSLSocket
	Initialize the handshake and receive notifications of its completion
	Define the enabled protocols (SSL v3.0, TLS v1.0) and enabled cipher suites
	Accept/require client authentication
	Obtain the negotiated session
		

Trust Manager:  determines whether the remote authentication credentials (and thus the connection) should be:
	Construction and verification of certificate chains
	Determination of the trust anchors

Key Manager: determines which authentication credentials to send to the remote host:
	Choose the identity to be used (alias string), given a list of accepted trust anchors
	Get the private key associated with an alias
	Get the certificate chain associated with an alias

autenticação
	“Algo” que se conhece: “Passwords” e “passphrases
	“Algo” que se possui: Ex.: “tokens” criptográficos, RSA SecurID
	“Algo” que se é: Ex.: características biométricas
	“Algo” que se faz: Ex.: assinatura manual
	“Onde” se está
	
proteçao contra ataques dicionario:
	Aumentar a incerteza da “password”
	Controlar o acesso à informação de verificação
	Aumentar o tempo de processamento da função que convert o input na informaçao de validaçao (ex: funçao de hash utilizada na password)
	Aumentar o tempo de processamento ou limitar o acesso à função de autenticaçao que valida se a informação de validação está correta
	
Salt
	protege contra pre-computação
	função que converte input para info de validação é diferente para cada utilizador
	é uma sequencia de bytes gerada aleatoriamente para cada utilizador

password aging
	idade máxima de password
	memorizar passwords anteriores
	Tornar o tempo de utilização menor que o tempo médio de pesquisa
	
Limitar acesso a funçao de autenticaçao
	Backoff: O tempo de execução de g(v) depende do número anterior de tentativas erradas
	Terminação da ligação: Terminação da ligação em caso de erro
	Bloqueamento: Bloqueamento da função g(v) após um número de tentativas erradas
	Jailing: Acesso ao serviço com funcionalidade limitada
	
CAPTCHA - Aumentar o custo dos pedidos, mais codigo no cliente

Password de utilizaçao unica - geras e guardas offline

Cookies
	Definir um Cookie com uma path mais genérica , não remove Cookies com paths mais específicas

OAuth 2.0
	access token? (por definiçao que tiver nos slides)
	(digrama das aulas com os nomes de cada cena ou slide 24 vno oaut) - acrescentar o nome dos intervenientes, onde e enviado o state e onde e enviado o scope
	Os clientes têm de se registar no servidor de autorização, sendo lhes atribuído um client_id . Para alguns é também atribuído um
		client_secret , usado pelo cliente no servidor de autorização
	No ato do registo defini-se o callback que deverá ser na aplicação do cliente
	4 fluxos: Client Credentials, Resource owner password, Authorization code, Implicit
	scope: tipo de autorização que está a ser pedido a determinado recurso
	
	Front channel: Termo usado para designar o canal de comunicação. client <<--> Authorization endpoint , via redirecção do user agent
	Back channel: Termo usado para designar o canal de comunição. cliente < <--> Token endpoint
	
	Preocupaçoes
		Gerais
			OAuth é um protocolo de segurança com muita interação com o utilizador: problemas de fator humano/engenharia social
			Autenticação dos servidores e confidencialidade dos pedidos com HTTPS
		Servidor de autorização
			Rotação de refresh tokens para que em caso de perda fiquem inválidos
			Validação do redirect_uri para evitar falsos web sites
		Cliente
			Não armazenar credenciais no código ou em recursos da aplicação
			Guardar credenciais ( client secret ) em local seguro
			Ligar o parâmetro state ao user agent que fez o pedido
			
OpenID Connect
	ID token: É representado num JWT e transportado num JWS
	
PEP (Policy Enforcement Point):
	Não deve ser possível alterá lo.
	Não deve ser possível contorná lo.
	Deve ser pequeno e estar confinado ao núcleo de segurança do sistema por forma a facilitar a verificação da sua correcção.
	
Política de segurança: define as regras do controlo de acessos
Modelo de segurança: formalização da forma de aplicação das políticas de segurança
Mecanismos de segurança: funções de baixo nível(software/hardware) que dão suporte à implementação de modelos e políticas de segurança
PEP depende dos mecanismos de segurança
PDP depende da política e modelo de segurança

Matriz de acessos.
	Define um triplo (S,O,A), onde:
		S é o conjunto de sujeitos. (linhas)
		O é o conjunto de objectos. (colunas)
		A é o conjunto de operações (dentro de cada celula)
	Vantagens:
		Facilidade na obtenção das permissões associadas a um sujeito.
		Ao eliminar um sujeito elimina se automaticamente todas as suas permissões.
		Em ambientes distribuídos elimina a necessidade de múltiplas autenticações.
	Desvantagens:
		Para obter lista de acessos a objetos obriga a pesquisar todas as capacidades.
		Possibilidade de cópia e uso fraudulento.
ACL (access control list)
	Vantagens:
		Facilidade na obtenção das permissões associadas a um objecto
		Ao eliminar um objecto elimina se todas as permissões a ele associadas.
	Desvantagens:
		Para saber todas as permissões de um sujeito é necessário pesquisar todas as ACLs
Permissões para grupos
	A verificação de controlo de acesso passa a ser feita também em função do sujeito ser membro ou não de um grupo.
	É possível usar permissões negativas para um determinado sujeito dentro de um grupo.
	Os grupos funcionam como uma camada intermédia na definição de controlos de acesso.
Windows
	Após login é atribuído ao utilizador um access token ond estão presentes security identifiers (SID) com a identificação do utilizador e dos grupos a que pertence
	cada recurso tem um desccritor com o SID do seu dono, DACL e SACL
	cada ACL tem: SID (utilizador ou grupo ), Permissão ou Negação, Acções
	
	
RBAC (Role Based Access Control) - respetiar privilegios minimos
	Base: RBAC 0
	Hierarquia de roles : RBAC 1
	Restrições: RBAC 2
	Unificação: RBAC 3
	
	Sessions - associaçao entrte users e roles
	(digrama do slide 18)
	
Risco = nível de ameaça x grau de vulnerabilidade x impacto

Buffer Overflow -> aplicação escrever no stack da funçao podendo alterar o endereço de redirecionamento e aponter para codigo malicioso
	mitigação
		Pode adicionar "canary" entre a zona de controlo do stack e a zona de execuçao. Termina programa se nuimero alterado
		Randomização de endereços - Address Space Layout Randomization (ASLR), endereço base dio stack é desconhecido
		
SQL injection
	mitigação
		Uso de procedimentos preparados
		
A SOP (same origin policy), utilizada nos browsers, impede que a origem A leia informação da origem B. Origem incluí o protocolo , domínio , porto
	cada origem guarda Cookies e DOM

Cross site Request Forgery (CSRF)
	os cookies sao sempre enviados para pedidos a partir de um browsers
	Authorization Response do Oauth 2.0 (caso perguntado nos trabalhos praticos)
	site do atacante pode executar codigo a fazer pedidos a sites dos quais exista cookies presentes
	mitigação
		same site cookie: Cookies passaram a poder ter definido o atributo SameSite.
			Strict (não enviado em pedidos cross site)
			Lax (enviado em pedidos cross site)
			
Cross site scripting (XSS)
	O atacante consegue colocar no browser da vítima (e numa aplicação alvo) código java script arbitrário
	(pesquisar tipos de XSS)